---
interface Props {
    items: {
        name: string;
        link: string;   
    }[];
}

const { items } = Astro.props;
---
<nav class="header-nav">
    <ul class="header-links">
        {items.map(
            item => <li class="header-link_item">
                        <a href={item.link}>
                            {item.name}
                        </a>
                    </li>
        )}
    
    </ul>
</nav>

<script>
    // Asumiendo que estos estilos ya están definidos en algún lugar de tu CSS
    const menu: HTMLElement | null = document.querySelector('.header-links');
    const barsIcon: HTMLElement | null = document.querySelector('.bars-icon');
    const cancelIcon: HTMLElement | null = document.querySelector('.cancel-icon');
    const headerMenuMobile: HTMLElement | null = document.querySelector('.header-menu-mobile');
    let isMenuOpen: boolean = false;

    menu?.classList.add('menu-hidden');
    headerMenuMobile?.addEventListener('click', toggleMenu);

    function toggleMenu(): void {
        if (!menu || !barsIcon || !cancelIcon) {
            console.error('One or more elements were not found!');
            return;
        }

        if (isMenuOpen) {
            // Aplicar estilos para "cerrar" el menú
            menu.classList.add('menu-hidden');
            menu.classList.remove('menu-visible');

            barsIcon.classList.remove('hidden');
            cancelIcon.classList.add('hidden');

            // Espera 0.5 segundos para cambiar la visibilidad de los iconos, si es necesario
            setTimeout(() => {
                barsIcon.classList.add('visible');
                cancelIcon.classList.remove('visible');
            }, 500);
        } else {
            // Aplicar estilos para "abrir" el menú
            menu.classList.remove('menu-hidden');
            menu.classList.add('menu-visible');

            barsIcon.classList.add('hidden');
            cancelIcon.classList.remove('hidden');

            setTimeout(() => {
                barsIcon.classList.remove('visible');
                cancelIcon.classList.add('visible');
            }, 500);
        }

        isMenuOpen = !isMenuOpen;
    }



</script>
<style>
.header-nav {
    display: block;
    height: 100%;
}
.header-links {
    display: flex;
    justify-content: space-between;
    align-items: center;
    list-style: none;
    padding: 0;

}
.header-links .header-link_item {
    margin: 15px 15px;
}
.header-link_item a {
    color: var(--primary-color);
    font-weight: 700;
    text-decoration: none;
    font-size: 1.5em;
}
.header-link_item a:hover {
    color: var(--ternary-color);
}


@media (max-width: 850px) {
    .header-links{
        position: absolute;
        left: 0;
        width: 100%;
        margin-top: 45px;
        flex-direction: column;
        border-top: 3px solid rgb(255, 255, 255);
        border-bottom: 3px solid rgb(255, 255, 255);
    }

    .header-links ul li{
        width: 100%;
        margin: 15px 15px;
    }

    .header-links.menu-visible {
    height: auto;
    opacity: 1;
    display: flex;
    background: var(--secondary-color);
    }

    .header-links.menu-hidden {
        height: 0;
        opacity: 0;
        display: none;
    }
}
</style>